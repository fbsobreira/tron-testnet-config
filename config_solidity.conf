net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data

  db.directory = "database-solidity",
  index.directory = "index-solidity",

  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain defualt and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").

  # Attention: name is a required field that must be set !!!
  properties = [
//    {
//      name = "account",
//      path = "storage_directory_test",
//      createIfMissing = true,
//      paranoidChecks = true,
//      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
//    },
//    {
//      name = "account-index",
//      path = "storage_directory_test",
//      createIfMissing = true,
//      paranoidChecks = true,
//      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  port = 10001
  priority = 8
  members = [
  ]
}

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18889

  connection.timeout = 2

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxActiveNodes = 30

  minParticipationRate = 33

  p2p {
    version = 14
  }

  rpc {
    port = 50052

    # Number of gRPC thread, default availableProcessors / 2
    # thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =
  }

}

active.node = [
  # Active establish connection in any case
  # Sample entries:
  # "ip:port",
  # "ip:port"
]

trust.node = [
  # Passive accept connection in any case
  # Sample entries:
  # "ip:port",
  # "ip:port"
]

seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "35.237.94.248:18888",
    "35.193.47.70:18888",
    "35.231.145.42:18888",
    "45.77.65.118:18888"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TNNqZuYhMfQvooC4kJwTsMJEQVU3vWGa5u"
      balance = "5000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TWsm8HtU2A5eEzoT8ev8yaoFjHsXLLrckb"
      balance = "5000000000000000"
    },
    {
      accountName = "CryptoChain"
      accountType = "AssetIssue"
      address = "THChUb7p2bwY6ReAiJXao6qc2ZGn88T46v"
      balance = "50000000000000000"
    },
    {
      accountName = "CryptoGuyInZa"
      accountType = "AssetIssue"
      address = "TDvPezbi8T9wcNd6ufJmg3ui3yfDWvBWCS"
      balance = "50000000000000000"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TSJD5rdu6wZXP7F2m3a3tn8Co3JcMjtBip"
      balance = "-9223372036854775808"
    }

  ]

  witnesses = [
    {
      address: THChUb7p2bwY6ReAiJXao6qc2ZGn88T46v,
      url = "http://cryptochain.network/node01",
      voteCount = 100027
    },
    {
      address: TDvPezbi8T9wcNd6ufJmg3ui3yfDWvBWCS,
      url = "https://www.cryptoguyinza.co.za",
      voteCount = 100026
    },
    {
      address: TXVVwEYjkfQruehduKxyruFQuqn6FzHZC4,
      url = "http://airbnb.host.sc",
      voteCount = 100025
    },
    {
      address: TR4mg1FC9pQQyzbUfGrcD7UiNEGQ2dVviA,
      url = "http://cryptochain.network/node02",
      voteCount = 100024
    },
    {
      address: THXS4894Sa99fHvNvavwa9L3Bf9nYtQUyF,
      url = "https://www.cryptogirls.ro",
      voteCount = 100023
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

#localwitness = [
#]

localwitnesskeystore = [
  "src/main/resources/localwitnesskeystore.json"
]

block = {
  needSyncCheck = true # first node : false, other : true
  maintenanceTimeInterval = 1800000 // 1 day: 86400000(ms), 6 hours: 21600000(ms), 30 min: 1800000(ms)
}
